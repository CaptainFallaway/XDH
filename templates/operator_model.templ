package templates

import (
	"fmt"
	"github.com/CaptainFallaway/XDH/data_pipeline"
)

templ OperatorModelContent(model data_pipeline.OperatorGrouping, expanded bool) {
	<div
		role="button"
		wails-state={ fmt.Sprintf("%v, %v", model.Index, expanded) }
		wails-ref="ModelInterface:GetModel"
		wails-swap="inner"
		wails-trgt={ fmt.Sprint(model.Index) }
		class="container-fluid d-inline-flex"
	>
		@abstractInfo("Operator", model.Operator)
		@abstractInfo("Boat IDs", JoinSlice(model.BoatIDs))
		@abstractInfo("First Date", model.FirstDate)
		@abstractInfo("Last Date", model.LastDate)
		@chevron(expanded)
	</div>
	if expanded {
		<div class="container-fluid grid">
			@moreInfo("Lorem Ipsum.", "Lorem Ipsum.", "col-6")
			@moreInfo("Lorem Ipsum.", "Lorem Ipsum.", "col-6")
		</div>
	}
}

templ OperatorModelList(models *[]data_pipeline.OperatorGrouping, metal string) {
	for _, model := range *models {
		<div id={ fmt.Sprint(model.Index) } class={ "container-fluid", "bg-primary", "rounded", "mb-3", "p-0", "border-5", "border-start", Border(model, metal) }>
			@OperatorModelContent(model, false)
		</div>
	}
}
