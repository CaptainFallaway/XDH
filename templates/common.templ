package templates

import (
	"strings"

	"github.com/CaptainFallaway/XDH/data_pipeline"
)

func Border(model data_pipeline.Grouping, metal string) string {
	switch model.Violations[metal] {
	case 0:
		return "border-success"
	case 1:
		return "border-warning"
	default:
		return "border-danger"
	}
}

func JoinSlice(operators []string) string {
	return strings.Join(operators, ", ")
}

templ abstractInfo(title string, text ...string) {
	<div class="d-grid my-4 mx-3">
		<small class="text-secondary">{ title }</small>
		for _, t := range text {
			<p class="m-0">{ t }</p>
		}
	</div>
}

templ moreInfo(title, text, grid string) {
	<div class={ "d-grid", "my-4", "mx-3", grid }>
		<small class="text-secondary">{ title }</small>
		<p class="m-0">{ text }</p>
	</div>
}

templ chevron(state bool) {
	if state {
		<i id="up" class="ms-auto p-3 fs-3 align-self-center bi bi-chevron-up"></i>
	} else {
		<i id="down" class="ms-auto p-3 fs-3 align-self-center bi bi-chevron-down"></i>
	}
}

templ DropArea() {
	<label class="w-100 h-100" for="file-input" id="drop-area">
		<input type="file" accept=".xls,.csv" id="file-input" hidden></input>
		<div role="button" style="border: 6px dashed;" class="border-secondary rounded w-100 h-100">
			<div class="pt-5 position-absolute top-50 start-50 translate-middle text-center">
				<i class="bi bi-upload m-auto" style="font-size: 5rem;"></i>
				<p class="text-center">Click to upload file</p>
			</div>
		</div>
	</label>
}