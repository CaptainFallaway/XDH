package templates

import (
	"fmt"
	internal "github.com/CaptainFallaway/XDH/data_pipeline"
)

templ BoatModelContent(model internal.BoatIDGrouping, expanded bool) {
	<div role="button" wails-state={ fmt.Sprintf("%v, %v", model.Index, expanded) } wails-ref="ModelInterface:GetModel" wails-swap="inner" wails-trgt={ fmt.Sprint(model.Index) } class="container-fluid d-inline-flex">
		@abstractInfo("Boat ID", model.BoatID)
		@abstractInfo("Operators", JoinSlice(model.Operators))
		@abstractInfo("First Date", model.FirstDate)
		@abstractInfo("Last Date", model.LastDate)
		@chevron(expanded)
	</div>
	if expanded {
		<div class="container-fluid d-inline-flex">
			@moreInfo("Lorem Ipsum.", "Lorem Ipsum.", "col-6")
			@moreInfo("Lorem Ipsum.", "Lorem Ipsum.", "col-6")
		</div>
	}
}

templ AllBoatModels(models []internal.BoatIDGrouping) {
	for _, model := range models {
		<div id={ fmt.Sprint(model.Index) } class={ "container-fluid", "bg-primary", "rounded", "mb-3", "p-0", "border-5", "border-start", Border(model) }>
      @BoatModelContent(model, false)
    </div>
	}
}
